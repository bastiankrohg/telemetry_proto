syntax = "proto3";

package marsrover;

// Service definition for telemetry
service TelemetryService {
  rpc StreamTelemetry(EmptyRequest) returns (stream TelemetryData);
}

// Empty request message
message EmptyRequest {}

// Telemetry data message
message TelemetryData {
  // Raw ultrasound distance measurement (in meters)
  float ultrasound_distance = 1;

  // Current odometer reading (in meters)
  float odometer = 2;

  // Current position and heading of the rover
  string current_position = 3;  // Example format: "x: 10.5, y: -5.2"
  float heading = 4;            // Heading in degrees (0-360, with 0 as north)

  // Search mode: "Pattern Pursuit" or "Resource Seeking"
  string search_mode = 5;

  // List of resources found
  repeated Resource resources_found = 6;

  // Current battery status
  string battery_status = 7;

  // Optional: Camera image placeholder (e.g., JPEG bytes)
  bytes camera_image = 8;
}

// Resource data message
message Resource {
  string type = 1;       // Resource type (e.g., "rock", "water")
  float x_coordinate = 2; // X-coordinate in the global map
  float y_coordinate = 3; // Y-coordinate in the global map
}